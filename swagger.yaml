swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Récupérer toutes les transactions du mois en cours
      description: Permet aux utilisateurs de visualiser toutes leurs transactions pour le mois en cours, groupées par compte.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Liste des transactions groupées par compte
          schema:
            type: object
            properties:
              transactions:
                type: array
                items:
                  $ref: '#/definitions/Transaction'
        '400':
          description: Requête invalide (ex. : userId manquant ou incorrect)
        '500':
          description: Erreur interne du serveur

    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Ajouter une nouvelle transaction
      description: Permet aux utilisateurs d'ajouter une nouvelle transaction.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Création d'une nouvelle transaction
          required: true
        
          schema:
            $ref: '#/definitions/TransactionCreate'
      produces:
        - application/json
      responses:
        '201':
          description: Transaction créée avec succès
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Requête invalide (ex. : données de transaction incorrectes)
        '500':
          description: Erreur interne du serveur

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Récupérer les détails d'une transaction spécifique
      description: Permet aux utilisateurs de visualiser les détails d'une transaction en particulier.
      parameters:
        - name: transactionId
          in: path
          required: true
          description: ID de la transaction
          type: string
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Détails de la transaction
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction non trouvée
        '500':
          description: Erreur interne du serveur

    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Modifier une transaction existante
      description: Permet aux utilisateurs de modifier les informations d'une transaction existante.
      parameters:
        - name: transactionId
          in: path
          required: true
          description: ID de la transaction
          type: string
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Mise à jour d'une transaction existante
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction mise à jour avec succès
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Requête invalide (ex. : données de mise à jour incorrectes)
        '404':
          description: Transaction non trouvée
        '500':
          description: Erreur interne du serveur

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      amount:
        type: number
      currency:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
  TransactionCreate:
    type: object
    required:
      - accountId
      - amount
      - currency
      - date
    properties:
      accountId:
        type: string
      amount:
        type: number
      currency:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
  TransactionUpdate:
    type: object
    properties:
      amount:
        type: number
      currency:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
      category:
        type: array
        items:
          type: string
      transactionType:
        type: string
      notes:
        type: string 
